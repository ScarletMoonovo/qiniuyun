syntax = "v1"

info(
    title: "角色模块"
    desc: "角色模块"
)

// 通用结构
type (
    Character {
        Id int64 `json:"id"`
        Background string `json:"background"`
        Name string `json:"name"`
        Avatar string `json:"avatar"`
        Description string `json:"description"`
        OpenLine string `json:"open_line"`
        Tags []string `json:"tags"`
        IsPublic bool `json:"is_public"`
        UserId int64 `json:"user_id"`
        CreatedAt int64 `json:"created_at"`
        UpdatedAt int64 `json:"updated_at"`
    }
)

//新建角色
type (
    NewCharacterRequest {
        Background string `json:"background"`
        Name string `json:"name"`
        Avatar string `json:"avatar"`
        Description string `json:"description"`
        OpenLine string `json:"open_line"`
        Voice string `json:"voice"`
        Tags []int64 `json:"tags"`
        IsPublic bool `json:"is_public"`
    }
    NewCharacterResponse {
        Character Character `json:"character"`
    }
)

type (
    getCharacterRequest {
        pageSize int64 `form:"page_size"`
        UserId int64 `form:"user_id,optional"`
        Tag int64 `form:"tag,optional"`
    }
    getCharacterResponse {
        Characters []Character `json:"characters"`
    }
)

@server(
    group: character
    prefix: api
    middleware: Auth
)

service api {
    @handler newCharacter
    post /character (NewCharacterRequest) returns (NewCharacterResponse)
    @handler getCharacter
    get /character (getCharacterRequest) returns (getCharacterResponse)
}