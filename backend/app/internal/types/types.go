// Code generated by goctl. DO NOT EDIT.
package types

type CaptchaRequest struct {
	Email string `json:"email" validate:"email"`
}

type ChangePwdRequest struct {
	Password string `json:"password" validate:"alphanum,min=8,max=16"`
}

type GetUserByNameRequest struct {
	Name     string `form:"name" validate:"required,excludesall=;#<>"`
	Cursor   int64  `form:"cursor"`
	PageSize int64  `form:"pageSize"`
}

type GetUserByNameResponse struct {
	Users []User `json:"users"`
}

type GetUserRequest struct {
	ID int64 `path:"id"`
}

type GetUserResponse struct {
	User User `json:"user"`
}

type LoginRequest struct {
	Email    string `json:"email" validate:"email"`
	Password string `json:"password,optional"`
	Captcha  string `json:"captcha,optional"`
}

type LoginResponse struct {
	ID           int64  `json:"id"`
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type RefreshResponse struct {
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type RegisterRequest struct {
	Email    string `json:"email" validate:"email"`
	Captcha  string `json:"captcha" validate:"number,len=6"`
	Name     string `json:"name" validate:"required,excludesall=;#<>"`
	Password string `json:"password" validate:"alphanum,min=8,max=16"`
}

type RegisterResponse struct {
	ID           int64  `json:"id"`
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type User struct {
	ID        int64  `json:"id"`
	Name      string `json:"name"`
	Avatar    string `json:"avatar"`
	Birthday  int64  `json:"birthday,optional"`
	Sex       string `json:"sex,options=[male,female],optional"`
	Signature string `json:"signature,optional"`
}
